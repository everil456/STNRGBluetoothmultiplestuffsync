###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        17/Mar/2015  11:48:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\src\gatt_db.c
#    Command line =  
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\src\gatt_db.c" -D USE_STDPERIPH_DRIVER -D
#        STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D
#        ENABLE_USB_PRINTF -D SERVER=1 -lcN "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\Server\List\" --diag_suppress Pa050
#        -o "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\Server\Obj\" --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\inc\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\" -I "C:\School\2014 Fall\ECE 4900\Bluetooth
#        Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\includes\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_USB-FS-Device_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1xx_StdPeriph_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\LIS3DH\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\STLM75\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\HTS221\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\..\..\..\platform\STM32L1XX\Libraries\SDK_Eval_STM32L\inc\"
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\Server\List\gatt_db.lst
#    Object file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server\EWARM\Server\Obj\gatt_db.o
#
###############################################################################

C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server\src\gatt_db.c
      1          #include "hal_types.h"
      2          #include "gatt_server.h"
      3          #include "gap.h"
      4          #include "string.h"
      5          #include "bluenrg_aci.h"
      6          #include "bluenrg_aci_const.h"
      7          #include "app_state.h"
      8          #include <stdio.h>
      9          #include <stdlib.h>
     10          #include "syncr.h"
     11          
     12          extern uint32_t offset=0;
     13          
     14          #ifndef DEBUG
     15          #define DEBUG 1
     16          #endif
     17          
     18          #if DEBUG
     19          #include <stdio.h>
     20          #define PRINTF(...) printf(__VA_ARGS__)
     21          #else
     22          #define PRINTF(...)
     23          #endif
     24          
     25          
     26          #define COPY_UUID_128(uuid_struct, uuid_15, uuid_14, uuid_13, uuid_12, uuid_11, uuid_10, uuid_9, uuid_8, uuid_7, uuid_6, uuid_5, uuid_4, uuid_3, uuid_2, uuid_1, uuid_0) \
     27            do {\
     28            	uuid_struct.uuid128[0] = uuid_0; uuid_struct.uuid128[1] = uuid_1; uuid_struct.uuid128[2] = uuid_2; uuid_struct.uuid128[3] = uuid_3; \
     29          	uuid_struct.uuid128[4] = uuid_4; uuid_struct.uuid128[5] = uuid_5; uuid_struct.uuid128[6] = uuid_6; uuid_struct.uuid128[7] = uuid_7; \
     30          	uuid_struct.uuid128[8] = uuid_8; uuid_struct.uuid128[9] = uuid_9; uuid_struct.uuid128[10] = uuid_10; uuid_struct.uuid128[11] = uuid_11; \
     31          	uuid_struct.uuid128[12] = uuid_12; uuid_struct.uuid128[13] = uuid_13; uuid_struct.uuid128[14] = uuid_14; uuid_struct.uuid128[15] = uuid_15; \
     32          	}while(0)
     33          
     34          uint16_t chatServHandle, TXCharHandle, RXCharHandle;
     35          /*  User Function where serial received data should be processed */
     36          void processInputData(uint8_t * rx_data, uint16_t data_size);
     37          
     38          /*******************************************************************************
     39          * Function Name  : Add_Chat_Service
     40          * Description    : Add the 'Accelerometer' service.
     41          * Input          : None
     42          * Return         : Status.
     43          *******************************************************************************/
     44          tBleStatus Add_Chat_Service(void)
     45          {
     46            	tBleStatus ret;
     47              
     48              /*
     49              UUIDs:
     50              D973F2E0-B19E-11E2-9E96-0800200C9A66
     51              D973F2E1-B19E-11E2-9E96-0800200C9A66
     52              D973F2E2-B19E-11E2-9E96-0800200C9A66
     53              */
     54              
     55              const uint8_t service_uuid[16] = {0x66,0x9a,0x0c,0x20,0x00,0x08,0x96,0x9e,0xe2,0x11,0x9e,0xb1,0xe0,0xf2,0x73,0xd9};
     56              const uint8_t charUuidTX[16] = {0x66,0x9a,0x0c,0x20,0x00,0x08,0x96,0x9e,0xe2,0x11,0x9e,0xb1,0xe1,0xf2,0x73,0xd9};
     57              const uint8_t charUuidRX[16] = {0x66,0x9a,0x0c,0x20,0x00,0x08,0x96,0x9e,0xe2,0x11,0x9e,0xb1,0xe2,0xf2,0x73,0xd9};
     58              
     59              ret = aci_gatt_add_serv(UUID_TYPE_128, service_uuid, PRIMARY_SERVICE, 7, &chatServHandle); /* original is 9?? */
     60              if (ret != BLE_STATUS_SUCCESS) goto fail;    
     61                  
     62              ret =  aci_gatt_add_char(chatServHandle, UUID_TYPE_128, charUuidTX, 20, CHAR_PROP_NOTIFY, ATTR_PERMISSION_NONE, 0,
     63                                16, 1, &TXCharHandle);
     64              if (ret != BLE_STATUS_SUCCESS) goto fail;
     65              
     66              ret =  aci_gatt_add_char(chatServHandle, UUID_TYPE_128, charUuidRX, 20, CHAR_PROP_WRITE|CHAR_PROP_WRITE_WITHOUT_RESP, ATTR_PERMISSION_NONE, GATT_NOTIFY_ATTRIBUTE_WRITE,
     67                                16, 1, &RXCharHandle);
     68              if (ret != BLE_STATUS_SUCCESS) goto fail;
     69              
     70          	PRINTF("Chat Service added.\r\nTX Char Handle %04X, RX Char Handle %04X\r\n", TXCharHandle, RXCharHandle);
     71          	return BLE_STATUS_SUCCESS; 
     72          	
     73          fail:
     74            	PRINTF("Error while adding Chat service.\n");
     75          	return BLE_STATUS_ERROR ;
     76          }
     77          
     78          
     79          void Attribute_Modified_CB(uint16_t handle, uint8_t data_length, uint8_t *att_data)
     80          {
     81            tClockTime ct = Clock_Timeus();
     82              if(handle == RXCharHandle + 1){
     83                uint32_t got_time = (uint32_t) ct;
     84                printf("got_time: %d\n\r",got_time);
     85                printf("reveived: ");
     86                  for(int i = 0; i < data_length; i++)
     87                    printf("%c", att_data[i]);
     88                  printf("\r\n");
     89                  if(att_data[0] == '0'){
     90                    printf("at index 0 received a 0\n\r");
     91                    if(att_data[1] == 'O'){
     92                      printf("at index 1 received an O\n\r");
     93                      char number[4];
     94                      int p = 0;
     95                      for(int q = 2; q < 6; q++){
     96                        number[p] = att_data[q];
     97                        p++;
     98                      }
     99                      uint32_t time = atoi(number);
    100                      //need to store offset somewhere. Rex where do you want it?
    101                      offset = time;
    102                    }
    103                    else if(att_data[1] == 'T'){
    104                      printf("at index 1 received a T\n\r");           
    105                      uint32_t bstime = got_time;
    106                      printf("bstime: %d\n\r", bstime);
    107                      char message_t[8];
    108                      char number[5];
    109                      message_t[0] = 'B';
    110                      message_t[1] = 'T';
    111                      sprintf(number, "%d", bstime);
    112                      int p = 0;
    113                      for(int q = 2; q < 6; q++){
    114                        message_t[q] = number[p];
    115                        p++;
    116                      }
    117                      message_t[6] = '\n';
    118                      message_t[7] = '\0';
    119                      Clock_Wait(500);
    120                      printf(message_t);
    121                      processInputData(message_t, 8);  
    122                    
    123                    }
    124                    else if(att_data[1] == 'E'){
    125                      printf("at index 1 received an E\n\r");
    126                      char number[4];
    127                      int p = 0;
    128                      for(int q = 2; q < 6; q++){
    129                        number[p] = att_data[q];
    130                        p++;
    131                      }
    132                      uint32_t time = atoi(number);
    133                      //trigger event at time
    134                      printf("Event at time: %d\n\r", time);
    135                    }
    136                    
    137                  }
    138                    
    139              }
    140                else if(handle == TXCharHandle + 2){        
    141                  if(att_data[0] == 0x01)
    142                      APP_FLAG_SET(NOTIFICATIONS_ENABLED);
    143              }
    144          }
    145          
    146          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      88   Add_Chat_Service
        88   -> aci_gatt_add_char
        88   -> aci_gatt_add_serv
        88   -> printf
      48   Attribute_Modified_CB
        48   -> Clock_Timeus
        48   -> Clock_Wait
        48   -> __aeabi_memcpy
        48   -> __iar_Stoul
        48   -> printf
        48   -> processInputData
        48   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
      16  ?_0
      16  ?_1
      28  ?_10
      28  ?_11
      16  ?_12
       4  ?_13
      28  ?_14
      20  ?_15
      16  ?_2
      64  ?_3
      36  ?_4
      16  ?_5
      12  ?_6
       4  ?_7
       4  ?_8
      28  ?_9
     158  Add_Chat_Service
     322  Attribute_Modified_CB
      12  chatServHandle
          TXCharHandle
          RXCharHandle
          offset

 
  12 bytes in section .bss
  12 bytes in section .rodata
 824 bytes in section .text
 
 824 bytes of CODE  memory
  12 bytes of CONST memory
  12 bytes of DATA  memory

Errors: none
Warnings: 1
