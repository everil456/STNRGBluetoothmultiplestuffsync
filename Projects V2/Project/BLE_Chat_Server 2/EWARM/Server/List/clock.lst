###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        17/Mar/2015  11:49:03
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\platform\STM32L1XX\clock.c
#    Command line =  
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\platform\STM32L1XX\clock.c" -D USE_STDPERIPH_DRIVER -D STM32L1XX_MD
#        -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D ENABLE_USB_PRINTF -D
#        SERVER=1 -lcN "C:\School\2014 Fall\ECE 4900\Bluetooth
#        Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\Server\List\" --diag_suppress Pa050 -o "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\Obj\" --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\inc\" -I "C:\School\2014 Fall\ECE 4900\Bluetooth
#        Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\Bluetooth LE\SimpleBlueNRG_HCI\" -I "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\includes\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\" -I "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_USB-FS-Device_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1xx_StdPeriph_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\LIS3DH\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STLM75\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\HTS221\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\SDK_Eval_STM32L\inc\"
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\List\clock.lst
#    Object file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\Obj\clock.o
#
###############################################################################

C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects V2\platform\STM32L1XX\clock.c
      1          #include "clock.h"
      2          #include "hal.h"
      3          #include <stdio.h>
      4          
      5          /* Added define for clock settings */
      6          #include "SDK_EVAL_Clock.h"
      7          
      8          #include "stm32l1xx_systick.h"
      9          
     10          // The value that will be load in the SysTick value register.
     11          #define RELOAD_VALUE        (SYSCLK_FREQ/1000000)-1   // One clock each 1 ms
     12          #define RELOAD_VALUE_SLEEP  (SYSCLK_FREQ_SLEEP/1000000)-1   // One clock each 1 ms
     13          
     14          static volatile tClockTime count = 0;
     15          
     16          const uint32_t CLOCK_SECOND = 1000000;
     17          
     18          /*---------------------------------------------------------------------------*/
     19          void SysTick_Handler(void)
     20          {
     21            count++;
     22          }
     23          
     24          /*---------------------------------------------------------------------------*/
     25          
     26          void Clock_Init(void)
     27          {
     28            ATOMIC_SECTION_BEGIN();
     29          
     30            SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);
     31            SysTick_SetReload(RELOAD_VALUE);
     32            SysTick_CounterCmd(SysTick_Counter_Enable);
     33            SysTick_ITConfig(ENABLE);
     34          
     35            ATOMIC_SECTION_END();
     36          }
     37          
     38          void Clock_Suspend(void)
     39          {
     40            SysTick->CTRL = 0;
     41            SysTick_CounterCmd(SysTick_Counter_Clear);
     42          }
     43          
     44          void Clock_Resume(Clock_TypeDef ClockType)
     45          {
     46            uint32_t reload_value;
     47            
     48            if(ClockType == CLOCK_SLEEP){
     49              reload_value = RELOAD_VALUE_SLEEP;
     50            }
     51            else {
     52              reload_value = RELOAD_VALUE;
     53            }  
     54            
     55            SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);
     56            SysTick_SetReload(reload_value);
     57            SysTick_CounterCmd(SysTick_Counter_Enable);
     58            SysTick_ITConfig(ENABLE);
     59          }
     60          
     61          /*---------------------------------------------------------------------------*/
     62          
     63          tClockTime Clock_Time(void)
     64          {
     65          
     66            printf("inside Clock_Time\r\n");
     67          
     68            return count/1000;
     69          }
     70          /*---------------------------------------------------------------------------*/
     71          
     72          tClockTime Clock_Timeus(void)
     73          {
     74          
     75            return count;
     76            
     77          }
     78          
     79          /*---------------------------------------------------------------------------*/
     80          /**
     81           * Wait for a multiple of 1 ms.
     82           *
     83           */
     84          void Clock_Wait(uint32_t i)
     85          {
     86            tClockTime start;
     87          
     88            start = Clock_Time();
     89            while(Clock_Time() - start < (tClockTime)(i*1000));
     90          }
     91          /*---------------------------------------------------------------------------*/
     92          /**
     93           * Wait for a multiple of 1 us.
     94           *
     95           */
     96          void Clock_Waitus(uint32_t i,tClockTime start)
     97          {
     98            //tClockTime start;
     99          
    100            //start = Clock_Time();
    101            while(Clock_Time() - start < (tClockTime)(i));
    102          }
    103          /*---------------------------------------------------------------------------*/
    104          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clock_Init
         8   -> SysTick_CLKSourceConfig
         8   -> SysTick_CounterCmd
         8   -> SysTick_ITConfig
         8   -> SysTick_SetReload
       8   Clock_Resume
         8   -> SysTick_CLKSourceConfig
         8   -> SysTick_CounterCmd
         0   -> SysTick_ITConfig
         8   -> SysTick_SetReload
       0   Clock_Suspend
         0   -> SysTick_CounterCmd
       8   Clock_Time
         8   -> printf
       0   Clock_Timeus
      24   Clock_Wait
        24   -> printf
      24   Clock_Waitus
        24   -> printf
       0   SysTick_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
      20  ?_0
       4  CLOCK_SECOND
      38  Clock_Init
      40  Clock_Resume
      10  Clock_Suspend
      28  Clock_Time
       6  Clock_Timeus
      56  Clock_Wait
      40  Clock_Waitus
      10  SysTick_Handler
       4  count

 
   4 bytes in section .bss
   4 bytes in section .rodata
 256 bytes in section .text
 
 256 bytes of CODE  memory
   4 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none
