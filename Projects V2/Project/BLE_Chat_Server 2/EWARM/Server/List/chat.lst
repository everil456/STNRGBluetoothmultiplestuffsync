###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        18/Mar/2015  14:46:41
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\src\chat.c
#    Command line =  
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\src\chat.c" -D USE_STDPERIPH_DRIVER -D
#        STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D
#        ENABLE_USB_PRINTF -D SERVER=1 -lcN "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\Server\List\" --diag_suppress Pa050 -o "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\Obj\" --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\inc\" -I "C:\School\2014 Fall\ECE 4900\Bluetooth
#        Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\Bluetooth LE\SimpleBlueNRG_HCI\" -I "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\includes\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\" -I "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_USB-FS-Device_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1xx_StdPeriph_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\LIS3DH\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STLM75\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\HTS221\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\SDK_Eval_STM32L\inc\"
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\List\chat.lst
#    Object file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\Obj\chat.o
#
###############################################################################

C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server 2\src\chat.c
      1          #include <stdio.h>
      2          #include <string.h>
      3          
      4          #include "stm32l1xx.h"
      5          #include "hal_types.h"
      6          #include "gap.h"
      7          #include "gatt_server.h"
      8          #include "hci.h"
      9          #include "osal.h"
     10          #include "clock.h"
     11          #include "gp_timer.h"
     12          #include "bluenrg_aci.h"
     13          #include "SDK_EVAL_Io.h"
     14          
     15          
     16          #define MIN(a,b)            ((a) < (b) )? (a) : (b) 
     17          
     18          #define CMD_BUFF_SIZE 512
     19          
     20          static char cmd[CMD_BUFF_SIZE];
     21          
     22          extern uint16_t chatServHandle, TXCharHandle, RXCharHandle;
     23          extern volatile uint16_t connection_handle;
     24          
     25          
     26          #ifdef CLIENT
     27          extern uint16_t rx_handle;
     28          #endif 
     29          /*******************************************************************************
     30          * Function Name  : processInputData.
     31          * Description    : Process a command. It should be called when data are received.
     32          * Input          : data_buffer: data address.
     33          *	           Nb_bytes: number of received bytes.
     34          * Return         : none.
     35          *******************************************************************************/
     36          
     37          void processInputData(uint8_t* data_buffer, uint16_t Nb_bytes)
     38          {
     39              static uint16_t end = 0;
     40              uint8_t i;
     41              
     42              
     43              for (i = 0; i < Nb_bytes; i++)
     44              {
     45                  if(end >= CMD_BUFF_SIZE-1){
     46                      end = 0;
     47                  }
     48                  
     49                  cmd[end] = data_buffer[i];
     50                  SdkEval_IO_Send_Data(data_buffer[i]);
     51                  end++;
     52                  
     53                  if((cmd[end-1] == '\r') || (cmd[end-1] == '\n')){
     54                    cmd[end-1] = '\n';
     55                    printf("\r\n");
     56                      if(end != 1){
     57                          int j = 0;
     58                          cmd[end] = '\0';
     59                              
     60                          while(j < end){
     61                              uint32_t len = MIN(20, end - j);
     62                              struct timer t;
     63                              Timer_Set(&t, CLOCK_SECOND*10);
     64                              
     65          #if SERVER                      
     66                              while(aci_gatt_update_char_value(chatServHandle,TXCharHandle,0,len,(uint8_t *)cmd+j)==BLE_STATUS_INSUFFICIENT_RESOURCES){
     67          #elif CLIENT
     68                              while(aci_gatt_write_without_response(connection_handle, rx_handle+1, len, (uint8_t *)cmd+j)==BLE_STATUS_NOT_ALLOWED){
     69          #else
     70          #error "Define SERVER or CLIENT"
     71          #endif
     72                                  // Radio is busy (buffer full).
     73                                  if(Timer_Expired(&t))
     74                                      break;
     75                              }                    
     76                              j += len;            
     77                          }
     78                      }
     79                      end = 0;
     80                  }
     81                  else{
     82                  }
     83              }
     84          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   processInputData
        48   -> SdkEval_IO_Send_Data
        48   -> Timer_Expired
        48   -> Timer_Set
        48   -> aci_gatt_update_char_value
        48   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ?_0
     516  end
          cmd
     192  processInputData

 
 516 bytes in section .bss
   4 bytes in section .rodata
 212 bytes in section .text
 
 212 bytes of CODE  memory
   4 bytes of CONST memory
 516 bytes of DATA  memory

Errors: none
Warnings: none
