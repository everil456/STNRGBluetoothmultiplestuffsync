###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        06/Mar/2015  10:13:13
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\src\gatt_db.c
#    Command line =  
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\src\gatt_db.c" -D USE_STDPERIPH_DRIVER -D
#        STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D
#        ENABLE_USB_PRINTF -D SERVER=1 -lcN "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\Server\List\" --diag_suppress Pa050 -o "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\Obj\" --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\inc\" -I "C:\School\2014 Fall\ECE 4900\Bluetooth
#        Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\Bluetooth LE\SimpleBlueNRG_HCI\" -I "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\includes\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\" -I "C:\School\2014
#        Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_USB-FS-Device_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1xx_StdPeriph_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\LIS3DH\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\STLM75\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\HTS221\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\inc\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server
#        2\EWARM\..\..\..\platform\STM32L1XX\Libraries\SDK_Eval_STM32L\inc\"
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\List\gatt_db.lst
#    Object file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Server 2\EWARM\Server\Obj\gatt_db.o
#
###############################################################################

C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Server 2\src\gatt_db.c
      1          #include "hal_types.h"
      2          #include "gatt_server.h"
      3          #include "gap.h"
      4          #include "string.h"
      5          #include "bluenrg_aci.h"
      6          #include "bluenrg_aci_const.h"
      7          #include "app_state.h"
      8          #include <stdio.h>
      9          #include <stdlib.h>
     10          #include "syncr.h"
     11          
     12          
     13          #ifndef DEBUG
     14          #define DEBUG 1
     15          #endif
     16          
     17          #if DEBUG
     18          #include <stdio.h>
     19          #define PRINTF(...) printf(__VA_ARGS__)
     20          #else
     21          #define PRINTF(...)
     22          #endif
     23          
     24          
     25          #define COPY_UUID_128(uuid_struct, uuid_15, uuid_14, uuid_13, uuid_12, uuid_11, uuid_10, uuid_9, uuid_8, uuid_7, uuid_6, uuid_5, uuid_4, uuid_3, uuid_2, uuid_1, uuid_0) \
     26            do {\
     27            	uuid_struct.uuid128[0] = uuid_0; uuid_struct.uuid128[1] = uuid_1; uuid_struct.uuid128[2] = uuid_2; uuid_struct.uuid128[3] = uuid_3; \
     28          	uuid_struct.uuid128[4] = uuid_4; uuid_struct.uuid128[5] = uuid_5; uuid_struct.uuid128[6] = uuid_6; uuid_struct.uuid128[7] = uuid_7; \
     29          	uuid_struct.uuid128[8] = uuid_8; uuid_struct.uuid128[9] = uuid_9; uuid_struct.uuid128[10] = uuid_10; uuid_struct.uuid128[11] = uuid_11; \
     30          	uuid_struct.uuid128[12] = uuid_12; uuid_struct.uuid128[13] = uuid_13; uuid_struct.uuid128[14] = uuid_14; uuid_struct.uuid128[15] = uuid_15; \
     31          	}while(0)
     32          
     33          uint16_t chatServHandle, TXCharHandle, RXCharHandle;
     34          /*  User Function where serial received data should be processed */
     35          void processInputData(uint8_t * rx_data, uint16_t data_size);
     36          
     37          /*******************************************************************************
     38          * Function Name  : Add_Chat_Service
     39          * Description    : Add the 'Accelerometer' service.
     40          * Input          : None
     41          * Return         : Status.
     42          *******************************************************************************/
     43          tBleStatus Add_Chat_Service(void)
     44          {
     45            	tBleStatus ret;
     46              
     47              /*
     48              UUIDs:
     49              D973F2E0-B19E-11E2-9E96-0800200C9A66
     50              D973F2E1-B19E-11E2-9E96-0800200C9A66
     51              D973F2E2-B19E-11E2-9E96-0800200C9A66
     52              */
     53              
     54              const uint8_t service_uuid[16] = {0x66,0x9a,0x0c,0x20,0x00,0x08,0x96,0x9e,0xe2,0x11,0x9e,0xb1,0xe0,0xf2,0x73,0xd9};
     55              const uint8_t charUuidTX[16] = {0x66,0x9a,0x0c,0x20,0x00,0x08,0x96,0x9e,0xe2,0x11,0x9e,0xb1,0xe1,0xf2,0x73,0xd9};
     56              const uint8_t charUuidRX[16] = {0x66,0x9a,0x0c,0x20,0x00,0x08,0x96,0x9e,0xe2,0x11,0x9e,0xb1,0xe2,0xf2,0x73,0xd9};
     57              
     58              ret = aci_gatt_add_serv(UUID_TYPE_128, service_uuid, PRIMARY_SERVICE, 7, &chatServHandle); /* original is 9?? */
     59              if (ret != BLE_STATUS_SUCCESS) goto fail;    
     60                  
     61              ret =  aci_gatt_add_char(chatServHandle, UUID_TYPE_128, charUuidTX, 20, CHAR_PROP_NOTIFY, ATTR_PERMISSION_NONE, 0,
     62                                16, 1, &TXCharHandle);
     63              if (ret != BLE_STATUS_SUCCESS) goto fail;
     64              
     65              ret =  aci_gatt_add_char(chatServHandle, UUID_TYPE_128, charUuidRX, 20, CHAR_PROP_WRITE|CHAR_PROP_WRITE_WITHOUT_RESP, ATTR_PERMISSION_NONE, GATT_NOTIFY_ATTRIBUTE_WRITE,
     66                                16, 1, &RXCharHandle);
     67              if (ret != BLE_STATUS_SUCCESS) goto fail;
     68              
     69          	PRINTF("Chat Service added.\r\nTX Char Handle %04X, RX Char Handle %04X\r\n", TXCharHandle, RXCharHandle);
     70          	return BLE_STATUS_SUCCESS; 
     71          	
     72          fail:
     73            	PRINTF("Error while adding Chat service.\n");
     74          	return BLE_STATUS_ERROR ;
     75          }
     76          
     77          
     78          void Attribute_Modified_CB(uint16_t handle, uint8_t data_length, uint8_t *att_data)
     79          {
     80              if(handle == RXCharHandle + 1){
     81                printf("reveived: ");
     82                  for(int i = 0; i < data_length; i++)
     83                    printf("%c", att_data[i]);
     84                  printf("\r\n");
     85                  if(att_data[0] == '1'){
     86                    if(att_data[1] == 'O'){
     87                      char number[4];
     88                      int p = 0;
     89                      for(int q = 2; q < 6; q++){
     90                        number[p] = att_data[q];
     91                        p++;
     92                      }
     93                      uint32_t time = atoi(number);
     94                      //need to store offset somewhere. Rex where do you want it?
     95                    }
     96                    else if(att_data[1] == 'T'){            
     97                      uint32_t hhtime = hhtimei();
     98                      char message_t[8];
     99                      char number[5];
    100                      message_t[0] = 'H';
    101                      message_t[1] = 'T';
    102                      sprintf(number, "%d", hhtime);
    103                      int p = 0;
    104                      for(int q = 2; q < 6; q++){
    105                        message_t[q] = number[p];
    106                        p++;
    107                      }
    108                      message_t[6] = '\n';
    109                      message_t[7] = '\0';
    110                      Clock_Wait(500);
    111                      processInputData(message_t, 8);
    112                      
    113                      
    114                    }
    115                    else if(att_data[1] == 'E'){
    116                      char number[4];
    117                      int p = 0;
    118                      for(int q = 2; q < 6; q++){
    119                        number[p] = att_data[q];
    120                        p++;
    121                      }
    122                      uint32_t time = atoi(number);
    123                      //trigger event at time
    124                    }
    125                    
    126                  }
    127              }
    128                else if(handle == TXCharHandle + 2){        
    129                  if(att_data[0] == 0x01)
    130                      APP_FLAG_SET(NOTIFICATIONS_ENABLED);
    131              }
    132          }
    133          
    134          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      88   Add_Chat_Service
        88   -> aci_gatt_add_char
        88   -> aci_gatt_add_serv
        88   -> printf
      40   Attribute_Modified_CB
        40   -> Clock_Wait
        40   -> __aeabi_memcpy
        40   -> __iar_Stoul
        40   -> hhtimei
        40   -> printf
        40   -> processInputData
        40   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
      16  ?_0
      16  ?_1
      16  ?_2
      64  ?_3
      36  ?_4
      12  ?_5
       4  ?_6
       4  ?_7
       4  ?_8
     158  Add_Chat_Service
     202  Attribute_Modified_CB
       6  chatServHandle
          TXCharHandle
          RXCharHandle

 
   6 bytes in section .bss
  12 bytes in section .rodata
 540 bytes in section .text
 
 540 bytes of CODE  memory
  12 bytes of CONST memory
   6 bytes of DATA  memory

Errors: none
Warnings: 1
