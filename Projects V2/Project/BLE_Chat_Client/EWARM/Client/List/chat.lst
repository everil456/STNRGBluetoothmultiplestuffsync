###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        18/Feb/2015  17:27:35
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\src\chat.c
#    Command line =  
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\src\chat.c" -D USE_STDPERIPH_DRIVER -D
#        STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D
#        ENABLE_USB_PRINTF -D CLIENT=1 -lcN "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\Client\List\" --diag_suppress Pa050
#        -o "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\Client\Obj\" --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\inc\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\" -I "C:\School\2014 Fall\ECE 4900\Bluetooth
#        Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\Bluetooth
#        LE\SimpleBlueNRG_HCI\includes\" -I "C:\School\2014 Fall\ECE
#        4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\" -I
#        "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_USB-FS-Device_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1xx_StdPeriph_Driver\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\LIS3DH\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\STLM75\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\HTS221\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\inc\"
#        -I "C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\..\..\..\platform\STM32L1XX\Libraries\SDK_Eval_STM32L\inc\"
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\Client\List\chat.lst
#    Object file  =  
#        C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects
#        V2\Project\BLE_Chat_Client\EWARM\Client\Obj\chat.o
#
###############################################################################

C:\School\2014 Fall\ECE 4900\Bluetooth Code\SVN\trunk\Projects V2\Project\BLE_Chat_Client\src\chat.c
      1          #include <stdio.h>
      2          #include <string.h>
      3          
      4          #include "stm32l1xx.h"
      5          #include "hal_types.h"
      6          #include "gap.h"
      7          #include "gatt_server.h"
      8          #include "hci.h"
      9          #include "osal.h"
     10          #include "clock.h"
     11          #include "gp_timer.h"
     12          #include "bluenrg_aci.h"
     13          #include "SDK_EVAL_Io.h"
     14          #include "slave_devices.h"
     15          
     16          
     17          #define MIN(a,b)            ((a) < (b) )? (a) : (b) 
     18          
     19          #define CMD_BUFF_SIZE 512
     20          
     21          static char cmd[CMD_BUFF_SIZE];
     22          
     23          extern uint16_t chatServHandle, TXCharHandle, RXCharHandle;
     24          extern volatile uint16_t connection_handle;
     25          
     26          
     27          #ifdef CLIENT
     28          extern uint16_t rx_handle;
     29          #endif 
     30          /*******************************************************************************
     31          * Function Name  : processInputData.
     32          * Description    : Process a command. It should be called when data are received.
     33          * Input          : data_buffer: data address.
     34          *	           Nb_bytes: number of received bytes.
     35          * Return         : none.
     36          *******************************************************************************/
     37          
     38          void processInputData(uint8_t* data_buffer, uint16_t Nb_bytes)  //Used to send messages between boards
     39          {
     40              static uint16_t end = 0;
     41              uint8_t i;
     42              
     43          
     44              for (i = 0; i < Nb_bytes; i++)
     45              {
     46                  if(end >= CMD_BUFF_SIZE-1){
     47                      end = 0;
     48                  }
     49                  
     50                  cmd[end] = data_buffer[i];
     51                  SdkEval_IO_Send_Data(data_buffer[i]);
     52                  end++;
     53                  
     54                  if((cmd[end-1] == '\r') || (cmd[end-1] == '\n')){
     55                    cmd[end-1] = '\n';
     56                    printf("\r\n");
     57                      if(end != 1){
     58                          int j = 0;
     59                          cmd[end] = '\0';
     60                              
     61                          while(j < end){
     62                              uint32_t len = MIN(20, end - j);
     63                              struct timer t;
     64                              Timer_Set(&t, CLOCK_SECOND*10);
     65                              
     66          #if SERVER                      
     67                              while(aci_gatt_update_char_value(chatServHandle,TXCharHandle,0,len,(uint8_t *)cmd+j)==BLE_STATUS_INSUFFICIENT_RESOURCES){
     68          #elif CLIENT
     69                              uint16_t connHandle = slaves[0].connection_handle;
     70                              uint16_t rxHandle = slaves[0].rx_handle;
     71                              for(int i = 0; i < numSlaves; i++)
     72                              {
     73                                if(cmd[0] == (char)(((int)'0')+i) && i < numSlaves)
     74                                {
     75                                  connHandle = slaves[i].connection_handle;
     76                                  rxHandle = slaves[i].rx_handle;
     77                                  break;
     78                                }
     79                              }
     80                              
     81                                while(aci_gatt_write_without_response(connHandle, rxHandle+1, len, (uint8_t *)cmd+j)==BLE_STATUS_NOT_ALLOWED){
     82          #else
     83          #error "Define SERVER or CLIENT"
     84          #endif
     85                                  // Radio is busy (buffer full).
     86                                  if(Timer_Expired(&t))
     87                                      break;
     88                              }                    
     89                              j += len;            
     90                          }
     91                      }
     92                      end = 0;
     93                  }
     94                  else{
     95                  }
     96              }
     97          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   processInputData
        48   -> SdkEval_IO_Send_Data
        48   -> Timer_Expired
        48   -> Timer_Set
        48   -> aci_gatt_write_without_response
        48   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ?_0
     516  end
          cmd
     224  processInputData

 
 516 bytes in section .bss
   4 bytes in section .rodata
 240 bytes in section .text
 
 240 bytes of CODE  memory
   4 bytes of CONST memory
 516 bytes of DATA  memory

Errors: none
Warnings: none
